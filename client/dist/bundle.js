(()=>{"use strict";(async()=>{const e=new URLSearchParams(window.location.search).get("sessionObj")||"",t=atob(e),o=JSON.parse(t);if(console.log("sessionObj",o),localStorage.setItem("session",JSON.stringify(o)),""!==o.authToken){const e=await async function(e){const t={Authorization:`Bearer ${e}`},o=await fetch("https://okto-production.up.railway.app/api/verify-session",{headers:t});if(!o.ok)throw new Error("Network error!!!");return await o.json()}(o.authToken),t=document.getElementById("sessionDetails");t&&(t.innerText=JSON.stringify(e))}})(),document.getElementById("emailSubmitBtn")?.addEventListener("click",(()=>{const e=document.getElementById("email");!async function(e){const t=await fetch("https://okto-production.up.railway.app/api/email/send-otp",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e})});if(!t.ok)throw new Error("Network error!!!");const o=await t.json();window.localStorage.setItem("emailOtpToken",o.data.token)}(e?.value||"")})),document.getElementById("otpSubmitBtn")?.addEventListener("click",(async()=>{const e=document.getElementById("otp"),t=document.getElementById("email"),o=e?.value||"",n=t?.value||"",a=window.localStorage.getItem("emailOtpToken")||"",i=await async function(e,t,o){const n=await fetch("https://okto-production.up.railway.app/api/email/verify-otp",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,otp:t,token:o})});if(!n.ok)throw new Error("Network error!!!");const a=await n.json();return window.localStorage.setItem("sessionObj",a),a}(n,o,a),s=document.getElementById("sessionDetails");s&&(s.innerText=JSON.stringify(i))})),document.getElementById("tokenTransferSubmitBtn")?.addEventListener("click",(async()=>{const e=document.getElementById("receiptAddress").value||"",t=parseInt(document.getElementById("receiptAmount").value)||0,o=localStorage.getItem("session")||"";!async function(e,t,o){const n=await fetch("https://okto-production.up.railway.app/api/token-transfer",{method:"POST",headers:{Authorization:`Bearer ${o.authToken}`,"Content-Type":"application/json"},body:JSON.stringify({senderAddress:e,senderAmount:t,sessionConfig:o.sessionConfig})});if(!n.ok)throw new Error("Network error!!!");await n.json()}(e,t,JSON.parse(o))}))})();